{
  "version": 3,
  "sources": ["../../laravel-vue-i18n/dist/utils/get-plural-index.js", "../../laravel-vue-i18n/dist/pluralization.js", "../../laravel-vue-i18n/dist/utils/avoid-exceptions.js", "../../laravel-vue-i18n/dist/utils/has-php-translations.js", "../../laravel-vue-i18n/dist/index.js"],
  "sourcesContent": ["/**\n * Get the index to use for pluralization.\n *\n * The plural rules are derived from code of the Zend Framework (2010-09-25), which\n * is subject to the new BSD license (https://framework.zend.com/license)\n * Copyright (c) 2005-2010 - Zend Technologies USA Inc. (http://www.zend.com)\n */\nexport function getPluralIndex(lang, number) {\n    switch (lang.replace('_', '-')) {\n        case 'af':\n        case 'af-ZA':\n        case 'bn':\n        case 'bn-BD':\n        case 'bn-IN':\n        case 'bg':\n        case 'bg-BG':\n        case 'ca':\n        case 'ca-AD':\n        case 'ca-ES':\n        case 'ca-FR':\n        case 'ca-IT':\n        case 'da':\n        case 'da-DK':\n        case 'de':\n        case 'de-AT':\n        case 'de-BE':\n        case 'de-CH':\n        case 'de-DE':\n        case 'de-LI':\n        case 'de-LU':\n        case 'el':\n        case 'el-CY':\n        case 'el-GR':\n        case 'en':\n        case 'en-AG':\n        case 'en-AU':\n        case 'en-BW':\n        case 'en-CA':\n        case 'en-DK':\n        case 'en-GB':\n        case 'en-HK':\n        case 'en-IE':\n        case 'en-IN':\n        case 'en-NG':\n        case 'en-NZ':\n        case 'en-PH':\n        case 'en-SG':\n        case 'en-US':\n        case 'en-ZA':\n        case 'en-ZM':\n        case 'en-ZW':\n        case 'eo':\n        case 'eo-US':\n        case 'es':\n        case 'es-AR':\n        case 'es-BO':\n        case 'es-CL':\n        case 'es-CO':\n        case 'es-CR':\n        case 'es-CU':\n        case 'es-DO':\n        case 'es-EC':\n        case 'es-ES':\n        case 'es-GT':\n        case 'es-HN':\n        case 'es-MX':\n        case 'es-NI':\n        case 'es-PA':\n        case 'es-PE':\n        case 'es-PR':\n        case 'es-PY':\n        case 'es-SV':\n        case 'es-US':\n        case 'es-UY':\n        case 'es-VE':\n        case 'et':\n        case 'et-EE':\n        case 'eu':\n        case 'eu-ES':\n        case 'eu-FR':\n        case 'fa':\n        case 'fa-IR':\n        case 'fi':\n        case 'fi-FI':\n        case 'fo':\n        case 'fo-FO':\n        case 'fur':\n        case 'fur-IT':\n        case 'fy':\n        case 'fy-DE':\n        case 'fy-NL':\n        case 'gl':\n        case 'gl-ES':\n        case 'gu':\n        case 'gu-IN':\n        case 'ha':\n        case 'ha-NG':\n        case 'he':\n        case 'he-IL':\n        case 'hu':\n        case 'hu-HU':\n        case 'is':\n        case 'is-IS':\n        case 'it':\n        case 'it-CH':\n        case 'it-IT':\n        case 'ku':\n        case 'ku-TR':\n        case 'lb':\n        case 'lb-LU':\n        case 'ml':\n        case 'ml-IN':\n        case 'mn':\n        case 'mn-MN':\n        case 'mr':\n        case 'mr-IN':\n        case 'nah':\n        case 'nb':\n        case 'nb-NO':\n        case 'ne':\n        case 'ne-NP':\n        case 'nl':\n        case 'nl-AW':\n        case 'nl-BE':\n        case 'nl-NL':\n        case 'nn':\n        case 'nn-NO':\n        case 'no':\n        case 'om':\n        case 'om-ET':\n        case 'om-KE':\n        case 'or':\n        case 'or-IN':\n        case 'pa':\n        case 'pa-IN':\n        case 'pa-PK':\n        case 'pap':\n        case 'pap-AN':\n        case 'pap-AW':\n        case 'pap-CW':\n        case 'ps':\n        case 'ps-AF':\n        case 'pt':\n        case 'pt-BR':\n        case 'pt-PT':\n        case 'so':\n        case 'so-DJ':\n        case 'so-ET':\n        case 'so-KE':\n        case 'so-SO':\n        case 'sq':\n        case 'sq-AL':\n        case 'sq-MK':\n        case 'sv':\n        case 'sv-FI':\n        case 'sv-SE':\n        case 'sw':\n        case 'sw-KE':\n        case 'sw-TZ':\n        case 'ta':\n        case 'ta-IN':\n        case 'ta-LK':\n        case 'te':\n        case 'te-IN':\n        case 'tk':\n        case 'tk-TM':\n        case 'ur':\n        case 'ur-IN':\n        case 'ur-PK':\n        case 'zu':\n        case 'zu-ZA':\n            return number === 1 ? 0 : 1;\n        case 'am':\n        case 'am-ET':\n        case 'bh':\n        case 'fil':\n        case 'fil-PH':\n        case 'fr':\n        case 'fr-BE':\n        case 'fr-CA':\n        case 'fr-CH':\n        case 'fr-FR':\n        case 'fr-LU':\n        case 'gun':\n        case 'hi':\n        case 'hi-IN':\n        case 'hy':\n        case 'hy-AM':\n        case 'ln':\n        case 'ln-CD':\n        case 'mg':\n        case 'mg-MG':\n        case 'nso':\n        case 'nso-ZA':\n        case 'ti':\n        case 'ti-ER':\n        case 'ti-ET':\n        case 'wa':\n        case 'wa-BE':\n        case 'xbr':\n            return number === 0 || number === 1 ? 0 : 1;\n        case 'be':\n        case 'be-BY':\n        case 'bs':\n        case 'bs-BA':\n        case 'hr':\n        case 'hr-HR':\n        case 'ru':\n        case 'ru-RU':\n        case 'ru-UA':\n        case 'sr':\n        case 'sr-ME':\n        case 'sr-RS':\n        case 'uk':\n        case 'uk-UA':\n            return number % 10 == 1 && number % 100 != 11\n                ? 0\n                : number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)\n                    ? 1\n                    : 2;\n        case 'cs':\n        case 'cs-CZ':\n        case 'sk':\n        case 'sk-SK':\n            return number == 1 ? 0 : number >= 2 && number <= 4 ? 1 : 2;\n        case 'ga':\n        case 'ga-IE':\n            return number == 1 ? 0 : number == 2 ? 1 : 2;\n        case 'lt':\n        case 'lt-LT':\n            return number % 10 == 1 && number % 100 != 11\n                ? 0\n                : number % 10 >= 2 && (number % 100 < 10 || number % 100 >= 20)\n                    ? 1\n                    : 2;\n        case 'sl':\n        case 'sl-SI':\n            return number % 100 == 1 ? 0 : number % 100 == 2 ? 1 : number % 100 == 3 || number % 100 == 4 ? 2 : 3;\n        case 'mk':\n        case 'mk-MK':\n            return number % 10 == 1 ? 0 : 1;\n        case 'mt':\n        case 'mt-MT':\n            return number == 1\n                ? 0\n                : number == 0 || (number % 100 > 1 && number % 100 < 11)\n                    ? 1\n                    : number % 100 > 10 && number % 100 < 20\n                        ? 2\n                        : 3;\n        case 'lv':\n        case 'lv-LV':\n            return number == 0 ? 0 : number % 10 == 1 && number % 100 != 11 ? 1 : 2;\n        case 'pl':\n        case 'pl-PL':\n            return number == 1 ? 0 : number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 12 || number % 100 > 14) ? 1 : 2;\n        case 'cy':\n        case 'cy-GB':\n            return number == 1 ? 0 : number == 2 ? 1 : number == 8 || number == 11 ? 2 : 3;\n        case 'ro':\n        case 'ro-RO':\n            return number == 1 ? 0 : number == 0 || (number % 100 > 0 && number % 100 < 20) ? 1 : 2;\n        case 'ar':\n        case 'ar-AE':\n        case 'ar-BH':\n        case 'ar-DZ':\n        case 'ar-EG':\n        case 'ar-IN':\n        case 'ar-IQ':\n        case 'ar-JO':\n        case 'ar-KW':\n        case 'ar-LB':\n        case 'ar-LY':\n        case 'ar-MA':\n        case 'ar-OM':\n        case 'ar-QA':\n        case 'ar-SA':\n        case 'ar-SD':\n        case 'ar-SS':\n        case 'ar-SY':\n        case 'ar-TN':\n        case 'ar-YE':\n            return number == 0\n                ? 0\n                : number == 1\n                    ? 1\n                    : number == 2\n                        ? 2\n                        : number % 100 >= 3 && number % 100 <= 10\n                            ? 3\n                            : number % 100 >= 11 && number % 100 <= 99\n                                ? 4\n                                : 5;\n        default:\n            return 0;\n    }\n}\n", "import { getPluralIndex } from './utils/get-plural-index';\n/**\n * Select a proper translation string based on the given number.\n */\nexport function choose(message, number, lang) {\n    let segments = message.split('|');\n    const extracted = extract(segments, number);\n    if (extracted !== null) {\n        return extracted.trim();\n    }\n    segments = stripConditions(segments);\n    const pluralIndex = getPluralIndex(lang, number);\n    if (segments.length === 1 || !segments[pluralIndex]) {\n        return segments[0];\n    }\n    return segments[pluralIndex];\n}\n/**\n * Extract a translation string using inline conditions.\n */\nfunction extract(segments, number) {\n    for (const part of segments) {\n        let line = extractFromString(part, number);\n        if (line !== null) {\n            return line;\n        }\n    }\n    return null;\n}\n/**\n * Get the translation string if the condition matches.\n */\nfunction extractFromString(part, number) {\n    const matches = part.match(/^[\\{\\[]([^\\[\\]\\{\\}]*)[\\}\\]](.*)/s) || [];\n    if (matches.length !== 3) {\n        return null;\n    }\n    const condition = matches[1];\n    const value = matches[2];\n    if (condition.includes(',')) {\n        let [from, to] = condition.split(',');\n        if (to === '*' && number >= parseFloat(from)) {\n            return value;\n        }\n        else if (from === '*' && number <= parseFloat(to)) {\n            return value;\n        }\n        else if (number >= parseFloat(from) && number <= parseFloat(to)) {\n            return value;\n        }\n    }\n    return parseFloat(condition) === number ? value : null;\n}\n/**\n * Strip the inline conditions from each segment, just leaving the text.\n */\nfunction stripConditions(segments) {\n    return segments.map((part) => part.replace(/^[\\{\\[]([^\\[\\]\\{\\}]*)[\\}\\]]/, ''));\n}\n", "export const avoidException = (callback, param, defaults = {}) => {\n    try {\n        return callback(param);\n    }\n    catch {\n        return defaults;\n    }\n};\nexport const avoidExceptionOnPromise = async (promise, defaults = {}) => {\n    try {\n        return (await promise).default || defaults;\n    }\n    catch (e) {\n        return defaults;\n    }\n};\n", "export function hasPhpTranslations(isServer) {\n    return isServer || checkProcessEnv() || checkImportMeta();\n}\nfunction checkProcessEnv() {\n    return typeof process !== 'undefined' && process.env?.LARAVEL_VUE_I18N_HAS_PHP ? true : false;\n}\nfunction checkImportMeta() {\n    /** @ts-ignore */\n    return typeof import.meta.env !== 'undefined' &&\n        /** @ts-ignore */\n        import.meta.env.VITE_LARAVEL_VUE_I18N_HAS_PHP\n        ? true\n        : false;\n}\n", "import { reactive, computed } from 'vue';\nimport { choose } from './pluralization';\nimport { avoidExceptionOnPromise, avoidException } from './utils/avoid-exceptions';\nimport { hasPhpTranslations } from './utils/has-php-translations';\nconst isServer = typeof window === 'undefined';\n/**\n * Stores the shared i18n class instance\n */\nlet sharedInstance = null;\n/**\n * The default options, for the I18n class\n */\nconst DEFAULT_OPTIONS = {\n    lang: !isServer && document.documentElement.lang ? document.documentElement.lang.replace('-', '_') : null,\n    fallbackLang: 'en',\n    fallbackMissingTranslations: false,\n    resolve: (lang) => new Promise((resolve) => resolve({ default: {} })),\n    onLoad: (lang) => { }\n};\n/**\n * The default options, for the plugin.\n */\nconst DEFAULT_PLUGIN_OPTIONS = {\n    shared: true\n};\n/**\n * Checks if the language is loaded.\n */\nexport function isLoaded(lang) {\n    return I18n.getSharedInstance().isLoaded(lang);\n}\n/**\n * Loads the language file.\n */\nexport function loadLanguageAsync(lang, dashLangTry = false) {\n    return I18n.getSharedInstance().loadLanguageAsync(lang, dashLangTry);\n}\n/**\n * Get the translation for the given key.\n */\nexport function trans(key, replacements = {}) {\n    return I18n.getSharedInstance().trans(key, replacements);\n}\n/**\n * Get the translation for the given key and watch for any changes.\n */\nexport function wTrans(key, replacements = {}) {\n    return I18n.getSharedInstance().wTrans(key, replacements);\n}\n/**\n * Translates the given message based on a count.\n */\nexport function transChoice(key, number, replacements = {}) {\n    return I18n.getSharedInstance().transChoice(key, number, replacements);\n}\n/**\n * Translates the given message based on a count and watch for changes.\n */\nexport function wTransChoice(key, number, replacements = {}) {\n    return I18n.getSharedInstance().wTransChoice(key, number, replacements);\n}\n/**\n * Returns the current active language.\n */\nexport function getActiveLanguage() {\n    return I18n.getSharedInstance().getActiveLanguage();\n}\n/**\n * Resets all the data stored in memory.\n */\nexport const reset = () => {\n    sharedInstance?.reset(); // avoid creating a shared instance here\n};\n/**\n * Alias to `transChoice` to mimic the same function name from Laravel Framework.\n */\nexport const trans_choice = transChoice;\n/**\n * The Vue Plugin. to be used on your Vue app like this: `app.use(i18nVue)`\n */\nexport const i18nVue = {\n    install(app, options = {}) {\n        options = { ...DEFAULT_PLUGIN_OPTIONS, ...options };\n        const i18n = options.shared ? I18n.getSharedInstance(options, true) : new I18n(options);\n        app.config.globalProperties.$t = (key, replacements) => i18n.trans(key, replacements);\n        app.config.globalProperties.$tChoice = (key, number, replacements) => i18n.transChoice(key, number, replacements);\n        app.provide('i18n', i18n);\n    }\n};\n/**\n * The I18n class. Encapsulates all language loading and translation logic.\n */\nexport class I18n {\n    /**\n     * Creates a new instance of the I18n class, applying default options\n     */\n    constructor(options = {}) {\n        // Stores messages for the currently active language\n        this.activeMessages = reactive({});\n        // Stores messages for fallback language\n        this.fallbackMessages = reactive({});\n        /**\n         * Resets all the data stored in memory.\n         */\n        this.reset = () => {\n            I18n.loaded = [];\n            this.options = DEFAULT_OPTIONS;\n            for (const [key] of Object.entries(this.activeMessages)) {\n                this.activeMessages[key] = null;\n            }\n            if (this === sharedInstance) {\n                sharedInstance = null;\n            }\n        };\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        if (this.options.fallbackMissingTranslations) {\n            this.loadFallbackLanguage();\n        }\n        else {\n            this.load();\n        }\n    }\n    /**\n     * Sets options on the instance, preserving any values not present in new options\n     */\n    setOptions(options = {}, forceLoad = false) {\n        this.options = { ...this.options, ...options };\n        if (forceLoad) {\n            this.load();\n        }\n        return this;\n    }\n    /**\n     * Loads the language.\n     */\n    load() {\n        this[isServer ? 'loadLanguage' : 'loadLanguageAsync'](this.getActiveLanguage());\n    }\n    /**\n     * Load fallback language\n     */\n    loadFallbackLanguage() {\n        if (!isServer) {\n            this.resolveLangAsync(this.options.resolve, this.options.fallbackLang).then(({ default: messages }) => {\n                this.applyFallbackLanguage(this.options.fallbackLang, messages);\n                this.load();\n            });\n            return;\n        }\n        const { default: messages } = this.resolveLang(this.options.resolve, this.options.fallbackLang);\n        this.applyFallbackLanguage(this.options.fallbackLang, messages);\n        this.loadLanguage(this.getActiveLanguage());\n    }\n    /**\n     * Loads the language async.\n     */\n    loadLanguage(lang, dashLangTry = false) {\n        const loadedLang = I18n.loaded.find((row) => row.lang === lang);\n        if (loadedLang) {\n            this.setLanguage(loadedLang);\n            return;\n        }\n        const { default: messages } = this.resolveLang(this.options.resolve, lang);\n        this.applyLanguage(lang, messages, dashLangTry, this.loadLanguage);\n    }\n    /**\n     * Loads the language file.\n     */\n    loadLanguageAsync(lang, dashLangTry = false, ignoreAbort = false) {\n        if (!ignoreAbort) {\n            this.abortController?.abort();\n            this.abortController = new AbortController();\n        }\n        const loadedLang = I18n.loaded.find((row) => row.lang === lang);\n        if (loadedLang) {\n            return Promise.resolve(this.setLanguage(loadedLang));\n        }\n        return new Promise((resolve, reject) => {\n            this.abortController.signal.addEventListener('abort', () => {\n                resolve();\n            });\n            this.resolveLangAsync(this.options.resolve, lang).then(({ default: messages }) => {\n                resolve(this.applyLanguage(lang, messages, dashLangTry, this.loadLanguageAsync));\n            });\n        });\n    }\n    /**\n     * Resolves the language file or data, from direct data, synchronously.\n     */\n    resolveLang(callable, lang, data = {}) {\n        if (!Object.keys(data).length) {\n            data = avoidException(callable, lang);\n        }\n        if (hasPhpTranslations(isServer)) {\n            return {\n                default: {\n                    ...data,\n                    ...avoidException(callable, `php_${lang}`)\n                }\n            };\n        }\n        return { default: data };\n    }\n    /**\n     * It resolves the language file or data, from direct data, require or Promise.\n     */\n    async resolveLangAsync(callable, lang) {\n        let data = avoidException(callable, lang);\n        if (!(data instanceof Promise)) {\n            return this.resolveLang(callable, lang, data);\n        }\n        if (hasPhpTranslations(isServer)) {\n            const phpLang = await avoidExceptionOnPromise(callable(`php_${lang}`));\n            const jsonLang = await avoidExceptionOnPromise(data);\n            return new Promise((resolve) => resolve({\n                default: {\n                    ...phpLang,\n                    ...jsonLang\n                }\n            }));\n        }\n        return new Promise(async (resolve) => resolve({\n            default: await avoidExceptionOnPromise(data)\n        }));\n    }\n    /**\n     * Applies the language data and saves it to the loaded storage.\n     */\n    applyLanguage(lang, messages, dashLangTry = false, callable) {\n        if (Object.keys(messages).length < 1) {\n            if (/[-_]/g.test(lang) && !dashLangTry) {\n                return callable.call(this, lang.replace(/[-_]/g, (char) => (char === '-' ? '_' : '-')), true, true);\n            }\n            if (lang !== this.options.fallbackLang) {\n                return callable.call(this, this.options.fallbackLang, false, true);\n            }\n        }\n        const data = { lang, messages };\n        I18n.loaded.push(data);\n        return this.setLanguage(data);\n    }\n    applyFallbackLanguage(lang, messages) {\n        for (const [key, value] of Object.entries(messages)) {\n            this.fallbackMessages[key] = value;\n        }\n        I18n.loaded.push({\n            lang: this.options.fallbackLang,\n            messages\n        });\n    }\n    /**\n     * Sets the language messages to the activeMessages.\n     */\n    setLanguage({ lang, messages }) {\n        if (!isServer) {\n            // When setting the HTML lang attribute, hyphen must be use instead of underscore.\n            document.documentElement.setAttribute('lang', lang.replace('_', '-'));\n        }\n        this.options.lang = lang;\n        for (const [key, value] of Object.entries(messages)) {\n            this.activeMessages[key] = value;\n        }\n        for (const [key, value] of Object.entries(this.fallbackMessages)) {\n            if (!this.activeMessages[key] || this.activeMessages[key] === key) {\n                this.activeMessages[key] = value;\n            }\n        }\n        for (const [key] of Object.entries(this.activeMessages)) {\n            if (!messages[key] && !this.fallbackMessages[key]) {\n                this.activeMessages[key] = null;\n            }\n        }\n        this.options.onLoad(lang);\n        return lang;\n    }\n    /**\n     * Returns the current active language.\n     */\n    getActiveLanguage() {\n        return this.options.lang || this.options.fallbackLang;\n    }\n    /**\n     * Checks if the language is loaded.\n     */\n    isLoaded(lang) {\n        lang ?? (lang = this.getActiveLanguage());\n        return I18n.loaded.some((row) => row.lang.replace(/[-_]/g, '-') === lang.replace(/[-_]/g, '-'));\n    }\n    /**\n     * Get the translation for the given key.\n     */\n    trans(key, replacements = {}) {\n        return this.wTrans(key, replacements).value;\n    }\n    /**\n     * Get the translation for the given key and watch for any changes.\n     */\n    wTrans(key, replacements = {}) {\n        this.activeMessages[key] = this.findTranslation(key) || this.findTranslation(key.replace(/\\//g, '.')) || key;\n        return computed(() => this.makeReplacements(this.activeMessages[key], replacements));\n    }\n    /**\n     * Translates the given message based on a count.\n     */\n    transChoice(key, number, replacements = {}) {\n        return this.wTransChoice(key, number, replacements).value;\n    }\n    /**\n     * Translates the given message based on a count and watch for changes.\n     */\n    wTransChoice(key, number, replacements = {}) {\n        const message = this.wTrans(key, replacements);\n        replacements.count = number.toString();\n        return computed(() => this.makeReplacements(choose(message.value, number, this.options.lang), replacements));\n    }\n    /**\n     * Find translation in memory.\n     */\n    findTranslation(key) {\n        if (this.activeMessages[key]) {\n            return this.activeMessages[key];\n        }\n        const hasChildItems = this.activeMessages[`${key}.0`] !== undefined;\n        if (hasChildItems) {\n            const childItems = Object.entries(this.activeMessages)\n                .filter((item) => item[0].startsWith(`${key}.`))\n                .map((item) => item[1]);\n            return reactive(childItems);\n        }\n        return this.activeMessages[key];\n    }\n    /**\n     * Make the place-holder replacements on a line.\n     */\n    makeReplacements(message, replacements) {\n        const capitalize = (s) => s.charAt(0).toUpperCase() + s.slice(1);\n        Object.entries(replacements || [])\n            .sort((a, b) => (a[0].length >= b[0].length ? -1 : 1))\n            .forEach(([key, value]) => {\n            value = value.toString();\n            message = message\n                .replace(new RegExp(`:${key}`, 'g'), value)\n                .replace(new RegExp(`:${key.toUpperCase()}`, 'g'), value.toUpperCase())\n                .replace(new RegExp(`:${capitalize(key)}`, 'g'), capitalize(value));\n        });\n        return message;\n    }\n    /**\n     * Gets the shared I18n instance, instantiating it if not yet created\n     */\n    static getSharedInstance(options, forceLoad = false) {\n        return sharedInstance?.setOptions(options, forceLoad) || (sharedInstance = new I18n(options));\n    }\n}\n/**\n * Stores the loaded languages.\n */\nI18n.loaded = [];\n"],
  "mappings": ";;;;;;;;;AAOO,SAAS,eAAe,MAAM,QAAQ;AACzC,UAAQ,KAAK,QAAQ,KAAK,GAAG,GAAG;AAAA,IAC5B,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,WAAW,IAAI,IAAI;AAAA,IAC9B,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,WAAW,KAAK,WAAW,IAAI,IAAI;AAAA,IAC9C,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,SAAS,MAAM,KAAK,SAAS,OAAO,KACrC,IACA,SAAS,MAAM,KAAK,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,OAAO,MAC1E,IACA;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,UAAU,KAAK,UAAU,IAAI,IAAI;AAAA,IAC9D,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,UAAU,IAAI,IAAI;AAAA,IAC/C,KAAK;AAAA,IACL,KAAK;AACD,aAAO,SAAS,MAAM,KAAK,SAAS,OAAO,KACrC,IACA,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,OAAO,MACtD,IACA;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AACD,aAAO,SAAS,OAAO,IAAI,IAAI,SAAS,OAAO,IAAI,IAAI,SAAS,OAAO,KAAK,SAAS,OAAO,IAAI,IAAI;AAAA,IACxG,KAAK;AAAA,IACL,KAAK;AACD,aAAO,SAAS,MAAM,IAAI,IAAI;AAAA,IAClC,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IACX,IACA,UAAU,KAAM,SAAS,MAAM,KAAK,SAAS,MAAM,KAC/C,IACA,SAAS,MAAM,MAAM,SAAS,MAAM,KAChC,IACA;AAAA,IAClB,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,SAAS,MAAM,KAAK,SAAS,OAAO,KAAK,IAAI;AAAA,IAC1E,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,SAAS,MAAM,KAAK,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,SAAS,MAAM,MAAM,IAAI;AAAA,IACpH,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,UAAU,IAAI,IAAI,UAAU,KAAK,UAAU,KAAK,IAAI;AAAA,IACjF,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IAAI,IAAI,UAAU,KAAM,SAAS,MAAM,KAAK,SAAS,MAAM,KAAM,IAAI;AAAA,IAC1F,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACD,aAAO,UAAU,IACX,IACA,UAAU,IACN,IACA,UAAU,IACN,IACA,SAAS,OAAO,KAAK,SAAS,OAAO,KACjC,IACA,SAAS,OAAO,MAAM,SAAS,OAAO,KAClC,IACA;AAAA,IAC1B;AACI,aAAO;AAAA,EACf;AACJ;;;ACpSO,SAAS,OAAO,SAAS,QAAQ,MAAM;AAC1C,MAAI,WAAW,QAAQ,MAAM,GAAG;AAChC,QAAM,YAAY,QAAQ,UAAU,MAAM;AAC1C,MAAI,cAAc,MAAM;AACpB,WAAO,UAAU,KAAK;AAAA,EAC1B;AACA,aAAW,gBAAgB,QAAQ;AACnC,QAAM,cAAc,eAAe,MAAM,MAAM;AAC/C,MAAI,SAAS,WAAW,KAAK,CAAC,SAAS,WAAW,GAAG;AACjD,WAAO,SAAS,CAAC;AAAA,EACrB;AACA,SAAO,SAAS,WAAW;AAC/B;AAIA,SAAS,QAAQ,UAAU,QAAQ;AAC/B,aAAW,QAAQ,UAAU;AACzB,QAAI,OAAO,kBAAkB,MAAM,MAAM;AACzC,QAAI,SAAS,MAAM;AACf,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAIA,SAAS,kBAAkB,MAAM,QAAQ;AACrC,QAAM,UAAU,KAAK,MAAM,kCAAkC,KAAK,CAAC;AACnE,MAAI,QAAQ,WAAW,GAAG;AACtB,WAAO;AAAA,EACX;AACA,QAAM,YAAY,QAAQ,CAAC;AAC3B,QAAM,QAAQ,QAAQ,CAAC;AACvB,MAAI,UAAU,SAAS,GAAG,GAAG;AACzB,QAAI,CAAC,MAAM,EAAE,IAAI,UAAU,MAAM,GAAG;AACpC,QAAI,OAAO,OAAO,UAAU,WAAW,IAAI,GAAG;AAC1C,aAAO;AAAA,IACX,WACS,SAAS,OAAO,UAAU,WAAW,EAAE,GAAG;AAC/C,aAAO;AAAA,IACX,WACS,UAAU,WAAW,IAAI,KAAK,UAAU,WAAW,EAAE,GAAG;AAC7D,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO,WAAW,SAAS,MAAM,SAAS,QAAQ;AACtD;AAIA,SAAS,gBAAgB,UAAU;AAC/B,SAAO,SAAS,IAAI,CAAC,SAAS,KAAK,QAAQ,+BAA+B,EAAE,CAAC;AACjF;;;AC1DO,IAAM,iBAAiB,CAAC,UAAU,OAAO,WAAW,CAAC,MAAM;AAC9D,MAAI;AACA,WAAO,SAAS,KAAK;AAAA,EACzB,QACA;AACI,WAAO;AAAA,EACX;AACJ;AACO,IAAM,0BAA0B,OAAO,SAAS,WAAW,CAAC,MAAM;AACrE,MAAI;AACA,YAAQ,MAAM,SAAS,WAAW;AAAA,EACtC,SACO,GAAP;AACI,WAAO;AAAA,EACX;AACJ;;;ACfO,SAAS,mBAAmBA,WAAU;AACzC,SAAOA,aAAY,gBAAgB,KAAK,gBAAgB;AAC5D;AACA,SAAS,kBAAkB;AAH3B;AAII,SAAO,OAAO,YAAY,iBAAe,aAAQ,QAAR,mBAAa,4BAA2B,OAAO;AAC5F;AACA,SAAS,kBAAkB;AAEvB,SAAO,OAAO,YAAY,QAAQ;AAAA,EAE9B,YAAY,IAAI,gCACd,OACA;AACV;;;ACTA,IAAM,WAAW,OAAO,WAAW;AAInC,IAAI,iBAAiB;AAIrB,IAAM,kBAAkB;AAAA,EACpB,MAAM,CAAC,YAAY,SAAS,gBAAgB,OAAO,SAAS,gBAAgB,KAAK,QAAQ,KAAK,GAAG,IAAI;AAAA,EACrG,cAAc;AAAA,EACd,6BAA6B;AAAA,EAC7B,SAAS,CAAC,SAAS,IAAI,QAAQ,CAAC,YAAY,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,EACpE,QAAQ,CAAC,SAAS;AAAA,EAAE;AACxB;AAIA,IAAM,yBAAyB;AAAA,EAC3B,QAAQ;AACZ;AAIO,SAAS,SAAS,MAAM;AAC3B,SAAO,KAAK,kBAAkB,EAAE,SAAS,IAAI;AACjD;AAIO,SAAS,kBAAkB,MAAM,cAAc,OAAO;AACzD,SAAO,KAAK,kBAAkB,EAAE,kBAAkB,MAAM,WAAW;AACvE;AAIO,SAAS,MAAM,KAAK,eAAe,CAAC,GAAG;AAC1C,SAAO,KAAK,kBAAkB,EAAE,MAAM,KAAK,YAAY;AAC3D;AAIO,SAAS,OAAO,KAAK,eAAe,CAAC,GAAG;AAC3C,SAAO,KAAK,kBAAkB,EAAE,OAAO,KAAK,YAAY;AAC5D;AAIO,SAAS,YAAY,KAAK,QAAQ,eAAe,CAAC,GAAG;AACxD,SAAO,KAAK,kBAAkB,EAAE,YAAY,KAAK,QAAQ,YAAY;AACzE;AAIO,SAAS,aAAa,KAAK,QAAQ,eAAe,CAAC,GAAG;AACzD,SAAO,KAAK,kBAAkB,EAAE,aAAa,KAAK,QAAQ,YAAY;AAC1E;AAIO,SAAS,oBAAoB;AAChC,SAAO,KAAK,kBAAkB,EAAE,kBAAkB;AACtD;AAIO,IAAM,QAAQ,MAAM;AACvB,mDAAgB;AACpB;AAIO,IAAM,eAAe;AAIrB,IAAM,UAAU;AAAA,EACnB,QAAQ,KAAK,UAAU,CAAC,GAAG;AACvB,cAAU,EAAE,GAAG,wBAAwB,GAAG,QAAQ;AAClD,UAAM,OAAO,QAAQ,SAAS,KAAK,kBAAkB,SAAS,IAAI,IAAI,IAAI,KAAK,OAAO;AACtF,QAAI,OAAO,iBAAiB,KAAK,CAAC,KAAK,iBAAiB,KAAK,MAAM,KAAK,YAAY;AACpF,QAAI,OAAO,iBAAiB,WAAW,CAAC,KAAK,QAAQ,iBAAiB,KAAK,YAAY,KAAK,QAAQ,YAAY;AAChH,QAAI,QAAQ,QAAQ,IAAI;AAAA,EAC5B;AACJ;AAIO,IAAM,OAAN,MAAW;AAAA;AAAA;AAAA;AAAA,EAId,YAAY,UAAU,CAAC,GAAG;AAEtB,SAAK,iBAAiB,SAAS,CAAC,CAAC;AAEjC,SAAK,mBAAmB,SAAS,CAAC,CAAC;AAInC,SAAK,QAAQ,MAAM;AACf,WAAK,SAAS,CAAC;AACf,WAAK,UAAU;AACf,iBAAW,CAAC,GAAG,KAAK,OAAO,QAAQ,KAAK,cAAc,GAAG;AACrD,aAAK,eAAe,GAAG,IAAI;AAAA,MAC/B;AACA,UAAI,SAAS,gBAAgB;AACzB,yBAAiB;AAAA,MACrB;AAAA,IACJ;AACA,SAAK,UAAU,EAAE,GAAG,iBAAiB,GAAG,QAAQ;AAChD,QAAI,KAAK,QAAQ,6BAA6B;AAC1C,WAAK,qBAAqB;AAAA,IAC9B,OACK;AACD,WAAK,KAAK;AAAA,IACd;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,UAAU,CAAC,GAAG,YAAY,OAAO;AACxC,SAAK,UAAU,EAAE,GAAG,KAAK,SAAS,GAAG,QAAQ;AAC7C,QAAI,WAAW;AACX,WAAK,KAAK;AAAA,IACd;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACH,SAAK,WAAW,iBAAiB,mBAAmB,EAAE,KAAK,kBAAkB,CAAC;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA,EAIA,uBAAuB;AACnB,QAAI,CAAC,UAAU;AACX,WAAK,iBAAiB,KAAK,QAAQ,SAAS,KAAK,QAAQ,YAAY,EAAE,KAAK,CAAC,EAAE,SAASC,UAAS,MAAM;AACnG,aAAK,sBAAsB,KAAK,QAAQ,cAAcA,SAAQ;AAC9D,aAAK,KAAK;AAAA,MACd,CAAC;AACD;AAAA,IACJ;AACA,UAAM,EAAE,SAAS,SAAS,IAAI,KAAK,YAAY,KAAK,QAAQ,SAAS,KAAK,QAAQ,YAAY;AAC9F,SAAK,sBAAsB,KAAK,QAAQ,cAAc,QAAQ;AAC9D,SAAK,aAAa,KAAK,kBAAkB,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,MAAM,cAAc,OAAO;AACpC,UAAM,aAAa,KAAK,OAAO,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI;AAC9D,QAAI,YAAY;AACZ,WAAK,YAAY,UAAU;AAC3B;AAAA,IACJ;AACA,UAAM,EAAE,SAAS,SAAS,IAAI,KAAK,YAAY,KAAK,QAAQ,SAAS,IAAI;AACzE,SAAK,cAAc,MAAM,UAAU,aAAa,KAAK,YAAY;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA,EAIA,kBAAkB,MAAM,cAAc,OAAO,cAAc,OAAO;AAxKtE;AAyKQ,QAAI,CAAC,aAAa;AACd,iBAAK,oBAAL,mBAAsB;AACtB,WAAK,kBAAkB,IAAI,gBAAgB;AAAA,IAC/C;AACA,UAAM,aAAa,KAAK,OAAO,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI;AAC9D,QAAI,YAAY;AACZ,aAAO,QAAQ,QAAQ,KAAK,YAAY,UAAU,CAAC;AAAA,IACvD;AACA,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,WAAK,gBAAgB,OAAO,iBAAiB,SAAS,MAAM;AACxD,gBAAQ;AAAA,MACZ,CAAC;AACD,WAAK,iBAAiB,KAAK,QAAQ,SAAS,IAAI,EAAE,KAAK,CAAC,EAAE,SAAS,SAAS,MAAM;AAC9E,gBAAQ,KAAK,cAAc,MAAM,UAAU,aAAa,KAAK,iBAAiB,CAAC;AAAA,MACnF,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,UAAU,MAAM,OAAO,CAAC,GAAG;AACnC,QAAI,CAAC,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC3B,aAAO,eAAe,UAAU,IAAI;AAAA,IACxC;AACA,QAAI,mBAAmB,QAAQ,GAAG;AAC9B,aAAO;AAAA,QACH,SAAS;AAAA,UACL,GAAG;AAAA,UACH,GAAG,eAAe,UAAU,OAAO,MAAM;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,EAAE,SAAS,KAAK;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAIA,MAAM,iBAAiB,UAAU,MAAM;AACnC,QAAI,OAAO,eAAe,UAAU,IAAI;AACxC,QAAI,EAAE,gBAAgB,UAAU;AAC5B,aAAO,KAAK,YAAY,UAAU,MAAM,IAAI;AAAA,IAChD;AACA,QAAI,mBAAmB,QAAQ,GAAG;AAC9B,YAAM,UAAU,MAAM,wBAAwB,SAAS,OAAO,MAAM,CAAC;AACrE,YAAM,WAAW,MAAM,wBAAwB,IAAI;AACnD,aAAO,IAAI,QAAQ,CAAC,YAAY,QAAQ;AAAA,QACpC,SAAS;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,QACP;AAAA,MACJ,CAAC,CAAC;AAAA,IACN;AACA,WAAO,IAAI,QAAQ,OAAO,YAAY,QAAQ;AAAA,MAC1C,SAAS,MAAM,wBAAwB,IAAI;AAAA,IAC/C,CAAC,CAAC;AAAA,EACN;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,MAAM,UAAU,cAAc,OAAO,UAAU;AACzD,QAAI,OAAO,KAAK,QAAQ,EAAE,SAAS,GAAG;AAClC,UAAI,QAAQ,KAAK,IAAI,KAAK,CAAC,aAAa;AACpC,eAAO,SAAS,KAAK,MAAM,KAAK,QAAQ,SAAS,CAAC,SAAU,SAAS,MAAM,MAAM,GAAI,GAAG,MAAM,IAAI;AAAA,MACtG;AACA,UAAI,SAAS,KAAK,QAAQ,cAAc;AACpC,eAAO,SAAS,KAAK,MAAM,KAAK,QAAQ,cAAc,OAAO,IAAI;AAAA,MACrE;AAAA,IACJ;AACA,UAAM,OAAO,EAAE,MAAM,SAAS;AAC9B,SAAK,OAAO,KAAK,IAAI;AACrB,WAAO,KAAK,YAAY,IAAI;AAAA,EAChC;AAAA,EACA,sBAAsB,MAAM,UAAU;AAClC,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACjD,WAAK,iBAAiB,GAAG,IAAI;AAAA,IACjC;AACA,SAAK,OAAO,KAAK;AAAA,MACb,MAAM,KAAK,QAAQ;AAAA,MACnB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,EAAE,MAAM,SAAS,GAAG;AAC5B,QAAI,CAAC,UAAU;AAEX,eAAS,gBAAgB,aAAa,QAAQ,KAAK,QAAQ,KAAK,GAAG,CAAC;AAAA,IACxE;AACA,SAAK,QAAQ,OAAO;AACpB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AACjD,WAAK,eAAe,GAAG,IAAI;AAAA,IAC/B;AACA,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,gBAAgB,GAAG;AAC9D,UAAI,CAAC,KAAK,eAAe,GAAG,KAAK,KAAK,eAAe,GAAG,MAAM,KAAK;AAC/D,aAAK,eAAe,GAAG,IAAI;AAAA,MAC/B;AAAA,IACJ;AACA,eAAW,CAAC,GAAG,KAAK,OAAO,QAAQ,KAAK,cAAc,GAAG;AACrD,UAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,iBAAiB,GAAG,GAAG;AAC/C,aAAK,eAAe,GAAG,IAAI;AAAA,MAC/B;AAAA,IACJ;AACA,SAAK,QAAQ,OAAO,IAAI;AACxB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,oBAAoB;AAChB,WAAO,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS,MAAM;AACX,aAAS,OAAO,KAAK,kBAAkB;AACvC,WAAO,KAAK,OAAO,KAAK,CAAC,QAAQ,IAAI,KAAK,QAAQ,SAAS,GAAG,MAAM,KAAK,QAAQ,SAAS,GAAG,CAAC;AAAA,EAClG;AAAA;AAAA;AAAA;AAAA,EAIA,MAAM,KAAK,eAAe,CAAC,GAAG;AAC1B,WAAO,KAAK,OAAO,KAAK,YAAY,EAAE;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,KAAK,eAAe,CAAC,GAAG;AAC3B,SAAK,eAAe,GAAG,IAAI,KAAK,gBAAgB,GAAG,KAAK,KAAK,gBAAgB,IAAI,QAAQ,OAAO,GAAG,CAAC,KAAK;AACzG,WAAO,SAAS,MAAM,KAAK,iBAAiB,KAAK,eAAe,GAAG,GAAG,YAAY,CAAC;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,KAAK,QAAQ,eAAe,CAAC,GAAG;AACxC,WAAO,KAAK,aAAa,KAAK,QAAQ,YAAY,EAAE;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,KAAK,QAAQ,eAAe,CAAC,GAAG;AACzC,UAAM,UAAU,KAAK,OAAO,KAAK,YAAY;AAC7C,iBAAa,QAAQ,OAAO,SAAS;AACrC,WAAO,SAAS,MAAM,KAAK,iBAAiB,OAAO,QAAQ,OAAO,QAAQ,KAAK,QAAQ,IAAI,GAAG,YAAY,CAAC;AAAA,EAC/G;AAAA;AAAA;AAAA;AAAA,EAIA,gBAAgB,KAAK;AACjB,QAAI,KAAK,eAAe,GAAG,GAAG;AAC1B,aAAO,KAAK,eAAe,GAAG;AAAA,IAClC;AACA,UAAM,gBAAgB,KAAK,eAAe,GAAG,OAAO,MAAM;AAC1D,QAAI,eAAe;AACf,YAAM,aAAa,OAAO,QAAQ,KAAK,cAAc,EAChD,OAAO,CAAC,SAAS,KAAK,CAAC,EAAE,WAAW,GAAG,MAAM,CAAC,EAC9C,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;AAC1B,aAAO,SAAS,UAAU;AAAA,IAC9B;AACA,WAAO,KAAK,eAAe,GAAG;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB,SAAS,cAAc;AACpC,UAAM,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,YAAY,IAAI,EAAE,MAAM,CAAC;AAC/D,WAAO,QAAQ,gBAAgB,CAAC,CAAC,EAC5B,KAAK,CAAC,GAAG,MAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,KAAK,CAAE,EACpD,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC3B,cAAQ,MAAM,SAAS;AACvB,gBAAU,QACL,QAAQ,IAAI,OAAO,IAAI,OAAO,GAAG,GAAG,KAAK,EACzC,QAAQ,IAAI,OAAO,IAAI,IAAI,YAAY,KAAK,GAAG,GAAG,MAAM,YAAY,CAAC,EACrE,QAAQ,IAAI,OAAO,IAAI,WAAW,GAAG,KAAK,GAAG,GAAG,WAAW,KAAK,CAAC;AAAA,IAC1E,CAAC;AACD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO,kBAAkB,SAAS,YAAY,OAAO;AACjD,YAAO,iDAAgB,WAAW,SAAS,gBAAe,iBAAiB,IAAI,KAAK,OAAO;AAAA,EAC/F;AACJ;AAIA,KAAK,SAAS,CAAC;",
  "names": ["isServer", "messages"]
}
